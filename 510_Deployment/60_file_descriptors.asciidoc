
=== 文件描述符和 MMap

Lucene 使用了一个 _非常_ 大的文件数目。((("deployment", "file descriptors and MMap"))) 同时，Elasticsearch 在节点和 HTTP 客户端之间进行通信也使用了大量的套接字。
所有这一切都需要可用的文件描述符。((("file descriptors")))

可悲的是，许多现代的 Linux 发行版本，每个进程默认允许一个微不足道的 1024 文件描述符。这实在太 _低_ 了，即使是一个小的 Elasticsearch 节点，更不用说一个处理数以百计的索引。

你应该提高你的文件描述符到很大的数量，如 64,000。这个过程困难得让人恼火，它高度依赖于你的特定操作系统和分布。请参考你的操作系统，以确定如何最好地更改文件描述符数的文档。

一旦你认为已经改变了它，检查 Elasticsearch，以确保它的真的起作用并且有足够的文件描述符：

[source,js]
----
GET /_nodes/process

{
   "cluster_name": "elasticsearch__zach",
   "nodes": {
      "TGn9iO2_QQKb0kavcLbnDw": {
         "name": "Zach",
         "transport_address": "inet[/192.168.1.131:9300]",
         "host": "zacharys-air",
         "ip": "192.168.1.131",
         "version": "2.0.0-SNAPSHOT",
         "build": "612f461",
         "http_address": "inet[/192.168.1.131:9200]",
         "process": {
            "refresh_interval_in_millis": 1000,
            "id": 19808,
            "max_file_descriptors": 64000, <1>
            "mlockall": true
         }
      }
   }
}
----
<1> `max_file_descriptors` 字段显示可用的描述符的数量，Elasticsearch 进程可以访问。

Elasticsearch 还使用 NioFS 和 MMapFS ((("MMapFS"))) 用于各种文件的混合。确保你配置最大地图计数，以便有足够的虚拟内存可用于 mmapped 文件。这可以暂时设置：

[source,js]
----
sysctl -w vm.max_map_count=262144
----

或者你可以在 `/etc/sysctl.conf` 通过修改 `vm.max_map_count` 永久设置它。
